#!/bin/bash
# sync Jeffs repos to ease multi machine editing.
#  shamelessly derived from http://doc.norang.ca/org-mode.html#git-sync

# Local bare repository name
# syncrepo=norang
# reporoot=~/git

# Display repository name only once
log_repo() {
  [ "x$lastrepo" == "x$repo" ] || {
    printf "\nREPO: ${repo}\n"
    lastrepo="$repo"
  }
}

# Log a message for a repository
log_msg() {
  log_repo
  printf "  $1\n"
}

# fast-forward reference $1 to $syncrepo/$1
fast_forward_ref() {
  log_msg "fast-forwarding ref $1"
  current_ref=$(cat .git/HEAD)
  if [ "x$current_ref" = "xref: refs/heads/$1" ]
  then
    # Check for dirty index
    files=$(git diff-index --name-only HEAD --)
    git merge refs/remotes/$syncrepo/$1
  else
    git branch -f $1 refs/remotes/$syncrepo/$1
  fi
}

# Push reference $1 to $syncrepo
push_ref() {
  log_msg "Pushing ref $1"
  if ! git push --tags $syncrepo $1
  then
    exit 1
  fi
}

# Check if a ref can be moved
#   - fast-forwards if behind the sync repo and is fast-forwardable
#   - Does nothing if ref is up to date
#   - Pushes ref to $syncrepo if ref is ahead of syncrepo and fastforwardable
#   - Fails if ref and $syncrop/ref have diverged
check_ref() {
  local git_path="$1"
  local syncrepo="$2"
  local ref="$3"
  revlist1=$(git -C $git_path rev-list refs/remotes/$syncrepo/$ref..$ref)
  revlist2=$(git -C $git_path rev-list $ref..refs/remotes/$syncrepo/$ref)
  if [ "x$revlist1" = "x" -a "x$revlist2" = "x" ]
  then
    # Ref $ref is up to date.
    :
  elif [ "x$revlist1" = "x" ]
  then
    # Ref $ref is behind $syncrepo/$ref and can be fast-forwarded.
    echo fast_forward_ref $ref || exit 1
  elif [ "x$revlist2" = "x" ]
  then
    # Ref $ref is ahead of $syncrepo/$ref and can be pushed.
    echo push_ref $ref || exit 1
  else
    log_msg "Ref $ref and $syncrepo/$ref have diverged."
    exit 1
  fi
}

# Check all local refs with matching refs in the $syncrepo
check_refs () {
  local git_path="$1"
  local syncrepo="$2"
  git -C $git_path for-each-ref refs/heads/* | while read sha1 commit ref
  do
    ref=${ref/refs\/heads\//}
    git -C $git_path for-each-ref refs/remotes/$syncrepo/$ref | while read sha2 commit ref2
    do
      if [ "x$sha2" != "x" -a "x$sha2" != "x" ]
      then
        check_ref $git_path $syncrepo $ref || exit 1
      fi
    done
  done
}
