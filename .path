#!/usr/bin/env bash
# set my path exactly how I want it.

# declare jeffs home paths
function jwm_home_paths() {

    # # entelo has standardized on node 6
    # local node_path="/usr/local/opt/node@6/bin"
    # # and entelo needs to find yarn stuff
    # local yarn_path=$HOME/.yarn/bin

    local -a jwm_paths=($HOME/bin
                        # haskell stack puts things in $HOME/.local/bin
                        # $HOME/.local/bin
                        # ${node_path}
                        $HOME/.rbenv/shims
                        $HOME/.rbenv/bin
                        # $yarn_path
                       )

    printf "%s\n" "${jwm_paths[@]}"
}


# define GOPATH, and set PATH from GOPATH as needed.
function jwm_go_locations() {
    declare -a go_locations=( /j/proj/gopl-exercises )

    printf "%s\n" "${go_locations[@]}"
}

# return every go project as a list of of lines
function jwm_go_paths() {
    declare -a go_paths=()
    declare -a go_locations=( $(jwm_go_locations) )
    if (( ${#go_locations[@]} > 0 )); then
        for gp in ${go_locations[@]}; do
            if [[ -e $gp && -e ${gp}/bin ]]; then
                go_paths+=($gp)
            fi
        done
    fi
    printf "%s\n" "${go_paths[@]}"
}

# return the bin directory for every go project as a list of lines
function jwm_go_bin_paths() {
    declare -a go_locs=( $(jwm_go_locations) )
    declare -a go_bin_paths=()
    for gl in ${go_locs[@]}; do
        if [[ -e $gl && -e $gl/bin ]]; then
            go_bin_paths+=($gl/bin)
        fi
    done

    printf "%s\n" "${go_bin_paths[@]}"
}

function jwm_standard_paths() {
    paths_fname=/etc/paths
    if [[ -f ${paths_fname} && -r ${paths_fname} ]]; then
        /bin/cat < $paths_fname
    fi
}

function jwm_rvm_path() {
    # when rvm is installed, it wants $HOME/.rvm/bin
    declare -a rvm_path=()
    if [[ -s "$HOME/.rvm/scripts/rvm" ]]; then
        rvm_path=($HOME/.rvm/bin)
    fi
    printf "%s\n" "${rvm_path[@]}"
}

function jwm_mongo_db_path() {
    # when mongo is installed, provide its bin
    declare -a mongo_path=()
    if [[ -s "/usr/local/mongodb/mongodb-osx-x86_64-2.6.12/bin/mongo" ]]; then
        mongo_path=(/usr/local/mongodb/mongodb-osx-x86_64-2.6.12/bin)
    fi
    printf "%s\n" "${mongo_path[@]}"
}

# circa 1H2019, homebrew will provide python3 and 2 side by side, but leaves the default names
#   python
#   pip
#   easy_install
#   ...
#  pointing to python2
# As I want to more agressively migrate to python3, I want to prefer those names invoke 3.
# According to brew info python, that means putting /usr/local/opt/python/libexec/bin early in path
#
# ❯ ls -l /usr/local/opt/python/libexec/bin
# total 0
# lrwxr-xr-x  1 jmccarrell  staff  26 Mar 29 09:34 easy_install -> ../../bin/easy_install-3.7
# lrwxr-xr-x  1 jmccarrell  staff  58 Mar 25 13:59 idle -> ../../Frameworks/Python.framework/Versions/3.7/bin/idle3.7
# lrwxr-xr-x  1 jmccarrell  staff  14 Mar 29 09:34 pip -> ../../bin/pip3
# lrwxr-xr-x  1 jmccarrell  staff  59 Mar 25 13:59 pydoc -> ../../Frameworks/Python.framework/Versions/3.7/bin/pydoc3.7
# lrwxr-xr-x  1 jmccarrell  staff  60 Mar 25 13:59 python -> ../../Frameworks/Python.framework/Versions/3.7/bin/python3.7
# lrwxr-xr-x  1 jmccarrell  staff  68 Mar 25 13:59 python-config -> ../../Frameworks/Python.framework/Versions/3.7/bin/python3.7m-config
# lrwxr-xr-x  1 jmccarrell  staff  16 Mar 29 09:34 wheel -> ../../bin/wheel3
function python3_macos_path() {
    macos_python3_path='/usr/local/opt/python/libexec/bin'
    result=''
    if [ -e "$macos_python3_path" ]; then
        result="$macos_python3_path"
    fi
    printf "$result"
}

unset PATH
for p in $(python3_macos_path) $(jwm_home_paths) $(jwm_go_bin_paths) $(jwm_standard_paths) $(jwm_mongo_db_path) $(jwm_rvm_path); do
    if [ -e "$p" ]; then
        if [ -z "$PATH" ]; then
            PATH="$p"
        else
            PATH="$PATH:$p"
        fi
    fi
done
unset p
export PATH
